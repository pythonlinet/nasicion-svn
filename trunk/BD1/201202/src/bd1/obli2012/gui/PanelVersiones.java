/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bd1.obli2012.gui;

import bd1.obli2012.gui.backend.Contexto;
import bd1.obli2012.versionado.BDDVersionado;
import bd1.obli2012.versionado.Cambio;
import bd1.obli2012.versionado.VersionBDD;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gnasi
 */
public class PanelVersiones extends javax.swing.JPanel {

    /**
     * Creates new form PanelVersiones
     */
    public PanelVersiones() {
        initComponents();
        BDDVersionado bddversionado = Contexto.getInstance().getBDDVersionado();
        List<Cambio> colaDeCambios = Contexto.getInstance().getColaCambios();

        List<Cambio> listaCambios = new ArrayList<Cambio>();

        DefaultTableModel modelo = (DefaultTableModel) this.tablaVersiones.getModel();
        String[] nombreCols = {"Versi√≥n", "Tipo Cambio", "Parametros"};


        List<String[]> rows = new LinkedList<String[]>();
        for (Integer verNum : bddversionado.getVersiones().keySet()) {
            for (Cambio c : bddversionado.getVersiones().get(verNum).getCambios()) {
                String[] row = new String[3];
                row[0] = verNum.toString();
                row[1] = c.getTipoCambio().toString();
                row[2] = parametrosToString(c.getParamCambios());
                rows.add(row);
            }
        }
        for (Cambio c : listaCambios) {
            String[] row = new String[3];
            Integer ver = Contexto.getInstance().getBDDVersionado().getVersionActual() +1;
            row[0] = ver.toString();
            row[1] = c.getTipoCambio().toString();
            row[2] = parametrosToString(c.getParamCambios());
            rows.add(row);
        }
        Object[][] dataVector = new String[rows.size()][3];
        int i = 0;
        for(Object[] row : rows){
            dataVector[i] = row;
            i++;
        }
        modelo.setDataVector(dataVector, nombreCols);

        ///modelo.setColumnIdentifiers();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabla = new javax.swing.JScrollPane();
        tablaVersiones = new javax.swing.JTable();

        tablaVersiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ){@Override
            public boolean isCellEditable (int fila, int columna) {
                return false;
            }
        });
        tablaVersiones.getTableHeader().setReorderingAllowed(false);
        tabla.setViewportView(tablaVersiones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabla, javax.swing.GroupLayout.DEFAULT_SIZE, 857, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabla, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane tabla;
    private javax.swing.JTable tablaVersiones;
    // End of variables declaration//GEN-END:variables

    private String parametrosToString(Map<String, String> paramCambios) {
        StringBuilder str = new StringBuilder();
        for (String s : paramCambios.keySet()) {
            str.append(s).append(" = ").append(paramCambios.get(s)).append("\n");
        }

        return str.toString();
    }
}
